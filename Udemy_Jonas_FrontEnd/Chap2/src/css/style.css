*,
*::after,
*::before {
  margin: 0;
  /*Like h1 element browser will add margin automatically*/
  padding: 0;
  box-sizing: inherit;
  /*By default, browser will calculate borders and paddings are added to the height and width*/ }

html {
  font-size: 62.5%; }

body {
  font-family: "Lato", sans-serif;
  /*Everything regarding to font better be body element, if Lato is not applied, it goes to San-Sarif*/
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  /*1.7 times larger than deault*/
  color: #777;
  padding: 1.5rem;
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem) rotate(0deg); }
  60% {
    transform: rotate(180deg); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottem {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /*back part of element transformed is visible or not*/ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 3s;
    animation-timing-function: ease-out;
    /* fast and then slow */
    animation-delay: 3s;
    /*happens but delayed for 3 second*/
    /* animation-iteration-count: 3; happen 3 times */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;
    animation-name: moveInRight;
    animation-duration: 3s;
    margin-bottom: 6rem; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.5rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.btn {
  /*pseudo after, just like a element behind the original element*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative; }
  .btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* x y blur shadow-color */
    /*&::after only shows when & is hovered*/ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
    /* transition happens here, because this is the original state of ::after element, and we want the transition happens for .4second, from the original state of ::after element to the :hover::after element*/ }
  .btn--white::after {
    background-color: #fff; }
  .btn--animated {
    animation: moveInBottem 4s ease-out .75s;
    /*name duration effect delay*/
    animation-fill-mode: backwards;
    /*0% key frame will be at the beginning state of element*/ }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 0.1rem solid #55c57a;
  padding: .3rem;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-1px); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    position: absolute;
    transition: all .2s;
    outline-offset: 2rem;
    /*outline is different from border, this offset give space*/ }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.1);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.9); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  /*Always fit the elemetn*/
  background-position: top;
  /*When the image is shrink or enlarged, the top stays fixed, and other direction will adjust*/
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
  /*This make sure the absolute parent element is header*/ }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
    width: 10rem;
    height: 10rem; }
  .header__logo {
    height: 3.5rem;
    transition: all 4s; }
  .header__logo:hover {
    transform: translateX(10rem);
    animation-fill-mode: backwards; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*adjust position using translate*/
    text-align: center; }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 5rem; }
  .row .col-1-of-2 {
    width: calc((100% - 5rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 5rem)/3); }
  .row .col-2-of-3 {
    width: calc(2 * (100% - 2 * 5rem)/3 + 5rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 5rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * (100% - 3 * 5rem) / 4 + 5rem); }
  .row .col-3-of-4 {
    width: calc(3 * (100% - 3 * 5rem) / 4 + 2* 5rem); }

/* Example for Chpater 3 inheritance */
.grandparent {
  line-height: 5rem;
  width: 5rem; }

.parent {
  line-height: 1.5em;
  width: 1.5em; }

.child {
  font-size: 2.5rem; }
